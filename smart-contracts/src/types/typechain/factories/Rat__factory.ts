/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Rat, RatInterface } from "../Rat";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "initContractURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "baseId",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_maxTokens",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "TokenBurned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "newOwnerTokens",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "oldOwnerTokens",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "tokenHolders",
        type: "address[]",
      },
    ],
    name: "TokenTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "burnToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "burnedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "canMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "createToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultMaxTokensPerWallet",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getBurnedTokensByOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTokensByOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTokens",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "maxTokensPerWallet",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newContractURI",
        type: "string",
      },
    ],
    name: "setContractURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newCost",
        type: "uint256",
      },
    ],
    name: "setCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "newMax",
        type: "uint32",
      },
    ],
    name: "setMaxTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "max",
        type: "uint32",
      },
    ],
    name: "setMaxTokensPerWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddr",
        type: "address",
      },
    ],
    name: "setWethAddr",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "storeAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006009819055600a805464ffffffffff60201b191668010000000f00000000179055600b556658d15e17628000600c553480156200004257600080fd5b50604051620032b7380380620032b783398101604081905262000065916200026c565b6040805180820182526006815265105dddd4985d60d21b60208083019182528351808501909452600384526214905560ea1b908401528151919291620000ae9160009162000194565b508051620000c490600190602084019062000194565b505050620000e1620000db6200013e60201b60201c565b62000142565b600b8290558351620000fb90600890602087019062000194565b50600a805463ffffffff191663ffffffff9290921691909117905550601280546001600160a01b0319166001600160a01b039290921691909117905550620003c6565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001a29062000373565b90600052602060002090601f016020900481019282620001c6576000855562000211565b82601f10620001e157805160ff191683800117855562000211565b8280016001018555821562000211579182015b8281111562000211578251825591602001919060010190620001f4565b506200021f92915062000223565b5090565b5b808211156200021f576000815560010162000224565b80516001600160a01b03811681146200025257600080fd5b919050565b805163ffffffff811681146200025257600080fd5b6000806000806080858703121562000282578384fd5b84516001600160401b038082111562000299578586fd5b818701915087601f830112620002ad578586fd5b815181811115620002c257620002c2620003b0565b604051601f8201601f19908116603f01168101908382118183101715620002ed57620002ed620003b0565b81604052828152602093508a8484870101111562000309578889fd5b8891505b828210156200032c57848201840151818301850152908301906200030d565b828211156200033d57888484830101525b97506200034f9150508782016200023a565b9450505060408501519150620003686060860162000257565b905092959194509250565b600181811c908216806200038857607f821691505b60208210811415620003aa57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b612ee180620003d66000396000f3fe60806040526004361061020f5760003560e01c80638da5cb5b11610118578063c87b56dd116100a0578063d1b02ba71161006f578063d1b02ba71461062a578063e83157421461064c578063e8a3d48514610669578063e985e9c51461067e578063f2fde38b1461069e57600080fd5b8063c87b56dd14610597578063cafcd838146105b7578063cafee7ee146105d7578063cd634be0146105f757600080fd5b80639cbf9e36116100e75780639cbf9e36146104f4578063a22cb465146104fc578063b88d4fde1461051c578063beb9716d1461053c578063c3fcbbe31461055d57600080fd5b80638da5cb5b1461048b5780638e499bcf146104a9578063938e3d7b146104bf57806395d89b41146104df57600080fd5b806340398d671161019b5780636352211e1161016a5780636352211e146103f65780636a92072b1461041657806370a0823114610436578063715018a6146104565780637b47ec1a1461046b57600080fd5b806340398d671461036957806342842e0e1461039657806344a0d68a146103b657806354a26847146103d657600080fd5b806313faede6116101e257806313faede6146102c55780631c348dd3146102e957806322ad22a71461030957806323b872dd146103295780633fc8cef31461034957600080fd5b806301ffc9a71461021457806306fdde0314610249578063081812fc1461026b578063095ea7b3146102a3575b600080fd5b34801561022057600080fd5b5061023461022f36600461295a565b6106be565b60405190151581526020015b60405180910390f35b34801561025557600080fd5b5061025e610710565b6040516102409190612bca565b34801561027757600080fd5b5061028b6102863660046129c5565b6107a2565b6040516001600160a01b039091168152602001610240565b3480156102af57600080fd5b506102c36102be3660046128ec565b61082f565b005b3480156102d157600080fd5b506102db600c5481565b604051908152602001610240565b3480156102f557600080fd5b506102db6103043660046129c5565b610945565b34801561031557600080fd5b506102c36103243660046129f5565b610966565b34801561033557600080fd5b506102c3610344366004612802565b61099e565b34801561035557600080fd5b5060125461028b906001600160a01b031681565b34801561037557600080fd5b506103896103843660046127b6565b6109cf565b6040516102409190612b92565b3480156103a257600080fd5b506102c36103b1366004612802565b610a3b565b3480156103c257600080fd5b506102c36103d13660046129c5565b610a56565b3480156103e257600080fd5b506102c36103f1366004612915565b610a85565b34801561040257600080fd5b5061028b6104113660046129c5565b610ae2565b34801561042257600080fd5b506102c3610431366004612a3a565b610b59565b34801561044257600080fd5b506102db6104513660046127b6565b610bb4565b34801561046257600080fd5b506102c3610c3b565b34801561047757600080fd5b506102c36104863660046129c5565b610c71565b34801561049757600080fd5b506007546001600160a01b031661028b565b3480156104b557600080fd5b506102db60095481565b3480156104cb57600080fd5b506102c36104da366004612992565b610df6565b3480156104eb57600080fd5b5061025e610e33565b6102c3610e42565b34801561050857600080fd5b506102c36105173660046128b6565b61115c565b34801561052857600080fd5b506102c361053736600461283d565b611221565b34801561054857600080fd5b50600a5461023490600160401b900460ff1681565b34801561056957600080fd5b50600a5461058290640100000000900463ffffffff1681565b60405163ffffffff9091168152602001610240565b3480156105a357600080fd5b5061025e6105b23660046129c5565b611259565b3480156105c357600080fd5b506102c36105d23660046127b6565b6113d0565b3480156105e357600080fd5b506103896105f23660046127b6565b61141c565b34801561060357600080fd5b506105826106123660046127b6565b60116020526000908152604090205463ffffffff1681565b34801561063657600080fd5b5061063f611486565b6040516102409190612b45565b34801561065857600080fd5b50600a546105829063ffffffff1681565b34801561067557600080fd5b5061025e6114e7565b34801561068a57600080fd5b506102346106993660046127d0565b6114f6565b3480156106aa57600080fd5b506102c36106b93660046127b6565b611524565b60006001600160e01b031982166380ac58cd60e01b14806106ef57506001600160e01b03198216635b5e139f60e01b145b8061070a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461071f90612ddb565b80601f016020809104026020016040519081016040528092919081815260200182805461074b90612ddb565b80156107985780601f1061076d57610100808354040283529160200191610798565b820191906000526020600020905b81548152906001019060200180831161077b57829003601f168201915b5050505050905090565b60006107ad826115bf565b6108135760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061083a82610ae2565b9050806001600160a01b0316836001600160a01b031614156108a85760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161080a565b336001600160a01b03821614806108c457506108c481336114f6565b6109365760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161080a565b61094083836115dc565b505050565b600e818154811061095557600080fd5b600091825260209091200154905081565b6007546001600160a01b031633146109905760405162461bcd60e51b815260040161080a90612c2f565b61099a828261164a565b5050565b6109a833826116d5565b6109c45760405162461bcd60e51b815260040161080a90612c64565b610940838383611797565b6001600160a01b0381166000908152600f6020908152604091829020805483518184028101840190945280845260609392830182828015610a2f57602002820191906000526020600020905b815481526020019060010190808311610a1b575b50505050509050919050565b61094083838360405180602001604052806000815250611221565b6007546001600160a01b03163314610a805760405162461bcd60e51b815260040161080a90612c2f565b600c55565b6007546001600160a01b03163314610aaf5760405162461bcd60e51b815260040161080a90612c2f565b6001600160a01b03919091166000908152601160205260409020805463ffffffff191663ffffffff909216919091179055565b6000818152600260205260408120546001600160a01b03168061070a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161080a565b6007546001600160a01b03163314610b835760405162461bcd60e51b815260040161080a90612c2f565b600a805460095468ff00000000ffffffff1990911663ffffffff939093169283179211600160401b02919091179055565b60006001600160a01b038216610c1f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161080a565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b03163314610c655760405162461bcd60e51b815260040161080a90612c2f565b610c6f6000611942565b565b33610c7b82610ae2565b6001600160a01b03161480610c9d5750610c9d610c9782610ae2565b336114f6565b610ce95760405162461bcd60e51b815260206004820152601760248201527f596f7520646f206e6f74206f776e207468697320726174000000000000000000604482015260640161080a565b600033610cf583610ae2565b6001600160a01b031614610d1157610d0c82610ae2565b610d13565b335b9050610d1e82611994565b610d2781610bb4565b610d3457610d34816119d4565b610d3e8183611b44565b6001600160a01b03811660009081526010602090815260408220805460018181018355918452918320909101849055600e8054918201815582527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd018390556009805491610dab83612dc4565b9091555050604080518381526001600160a01b03831660208201527f33631bcd0a4d34a7e2c240ab0753d5adfb7284d8ac89dab6876ec785c0cfa0e691015b60405180910390a15050565b6007546001600160a01b03163314610e205760405162461bcd60e51b815260040161080a90612c2f565b805161099a906008906020840190612622565b60606001805461071f90612ddb565b600a5460095463ffffffff909116118015610e665750600a54600160401b900460ff165b610eb25760405162461bcd60e51b815260206004820152601c60248201527f4d6178206e756d626572206f6620746f6b656e73207265616368656400000000604482015260640161080a565b600b546012546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610ef957600080fd5b505afa158015610f0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3191906129dd565b9050600c54811015610f775760405162461bcd60e51b815260206004820152600f60248201526e09cdee840cadcdeeaced040eecae8d608b1b604482015260640161080a565b3360009081526011602052604090205463ffffffff16610fc457600a54336000908152601160205260409020805464010000000090920463ffffffff1663ffffffff199092169190911790555b3360008181526011602052604090205463ffffffff1690610fe490610bb4565b106110315760405162461bcd60e51b815260206004820152601d60248201527f4d617820746f6b656e73207265616368656420666f722077616c6c6574000000604482015260640161080a565b61105e336110476007546001600160a01b031690565b600c546012546001600160a01b0316929190611cfa565b61106733610bb4565b6110ae57600d80546001810182556000919091527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb50180546001600160a01b031916331790555b6110b83383611d54565b600b80549060006110c883612e16565b9091555050600980549060006110dd83612e16565b9091555050336000908152600f60209081526040808320805460018101825590845292829020909201849055600a805460095468ff000000000000000019821663ffffffff90921611600160401b0217905590518381527ff00d28232b285f24f2e38415deb2ceb31069e70d4505838b3911b4f02058502e9101610dea565b6001600160a01b0382163314156111b55760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161080a565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61122b33836116d5565b6112475760405162461bcd60e51b815260040161080a90612c64565b61125384848484611d6e565b50505050565b6060611264826115bf565b6112ca5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b606482015260840161080a565b600082815260066020526040812080546112e390612ddb565b80601f016020809104026020016040519081016040528092919081815260200182805461130f90612ddb565b801561135c5780601f106113315761010080835404028352916020019161135c565b820191906000526020600020905b81548152906001019060200180831161133f57829003601f168201915b50505050509050600061137a60408051602081019091526000815290565b905080516000141561138d575092915050565b8151156113bf5780826040516020016113a7929190612ad9565b60405160208183030381529060405292505050919050565b6113c884611da1565b949350505050565b6007546001600160a01b031633146113fa5760405162461bcd60e51b815260040161080a90612c2f565b601280546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038116600090815260106020908152604091829020805483518184028101840190945280845260609392830182828015610a2f5760200282019190600052602060002090815481526020019060010190808311610a1b5750505050509050919050565b6060600d80548060200260200160405190810160405280929190818152602001828054801561079857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116114c0575050505050905090565b60606008805461071f90612ddb565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6007546001600160a01b0316331461154e5760405162461bcd60e51b815260040161080a90612c2f565b6001600160a01b0381166115b35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161080a565b6115bc81611942565b50565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061161182610ae2565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b611653826115bf565b6116b65760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161080a565b6000828152600660209081526040909120825161094092840190612622565b60006116e0826115bf565b6117415760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161080a565b600061174c83610ae2565b9050806001600160a01b0316846001600160a01b031614806117875750836001600160a01b031661177c846107a2565b6001600160a01b0316145b806113c857506113c881856114f6565b826001600160a01b03166117aa82610ae2565b6001600160a01b0316146118125760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161080a565b6001600160a01b0382166118745760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161080a565b61187f838383611e79565b61188a6000826115dc565b6001600160a01b03831660009081526003602052604081208054600192906118b3908490612d81565b90915550506001600160a01b03821660009081526003602052604081208054600192906118e1908490612d55565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61199d81611fa0565b600081815260066020526040902080546119b690612ddb565b1590506115bc5760008181526006602052604081206115bc916126a6565b600d5460005b8181101561094057826001600160a01b0316600d8281548110611a0d57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415611b3257611a33600183612d81565b811415611a8057600d805480611a5957634e487b7160e01b600052603160045260246000fd5b600082815260209020810160001990810180546001600160a01b0319169055019055505050565b600d611a8d600184612d81565b81548110611aab57634e487b7160e01b600052603260045260246000fd5b600091825260209091200154600d80546001600160a01b039092169183908110611ae557634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600d805480611a5957634e487b7160e01b600052603160045260246000fd5b80611b3c81612e16565b9150506119da565b6001600160a01b0382166000908152600f6020526040812054905b81811015611253576001600160a01b0384166000908152600f60205260409020805484919083908110611ba257634e487b7160e01b600052603260045260246000fd5b90600052602060002001541415611ce857611bbe600183612d81565b811415611c15576001600160a01b0384166000908152600f60205260409020805480611bfa57634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055611253565b6001600160a01b0384166000908152600f60205260409020611c38600184612d81565b81548110611c5657634e487b7160e01b600052603260045260246000fd5b9060005260206000200154600f6000866001600160a01b03166001600160a01b031681526020019081526020016000208281548110611ca557634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101929092556001600160a01b0386168152600f90915260409020805480611bfa57634e487b7160e01b600052603160045260246000fd5b80611cf281612e16565b915050611b5f565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611253908590612047565b61099a828260405180602001604052806000815250612119565b611d79848484611797565b611d858484848461214c565b6112535760405162461bcd60e51b815260040161080a90612bdd565b6060611dac826115bf565b611e105760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161080a565b6000611e2760408051602081019091526000815290565b90506000815111611e475760405180602001604052806000815250611e72565b80611e5184612259565b604051602001611e62929190612ad9565b6040516020818303038152906040525b9392505050565b6001600160a01b03831615801590611e9957506001600160a01b03821615155b15610940576001611ea984610bb4565b611eb39190612d81565b611ec057611ec0836119d4565b611ec982610bb4565b611f1957600d80546001810182556000919091527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb50180546001600160a01b0319166001600160a01b0384161790555b611f238382611b44565b6001600160a01b038083166000908152600f60209081526040808320805460018101825581855292842090920185905592861682529082902091517fc5924cfdebd60744aa1d44883cfef5b2bab40fa00f59f61cb3464b281f90bd2792611f939285928792899291600d90612cb5565b60405180910390a1505050565b6000611fab82610ae2565b9050611fb981600084611e79565b611fc46000836115dc565b6001600160a01b0381166000908152600360205260408120805460019290611fed908490612d81565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600061209c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123739092919063ffffffff16565b80519091501561094057808060200190518101906120ba919061293e565b6109405760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161080a565b6121238383612382565b612130600084848461214c565b6109405760405162461bcd60e51b815260040161080a90612bdd565b60006001600160a01b0384163b1561224e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612190903390899088908890600401612b08565b602060405180830381600087803b1580156121aa57600080fd5b505af19250505080156121da575060408051601f3d908101601f191682019092526121d791810190612976565b60015b612234573d808015612208576040519150601f19603f3d011682016040523d82523d6000602084013e61220d565b606091505b50805161222c5760405162461bcd60e51b815260040161080a90612bdd565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506113c8565b506001949350505050565b60608161227d5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156122a7578061229181612e16565b91506122a09050600a83612d6d565b9150612281565b60008167ffffffffffffffff8111156122d057634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156122fa576020820181803683370190505b5090505b84156113c85761230f600183612d81565b915061231c600a86612e31565b612327906030612d55565b60f81b81838151811061234a57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535061236c600a86612d6d565b94506122fe565b60606113c884846000856124c1565b6001600160a01b0382166123d85760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161080a565b6123e1816115bf565b1561242e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161080a565b61243a60008383611e79565b6001600160a01b0382166000908152600360205260408120805460019290612463908490612d55565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6060824710156125225760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161080a565b843b6125705760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161080a565b600080866001600160a01b0316858760405161258c9190612abd565b60006040518083038185875af1925050503d80600081146125c9576040519150601f19603f3d011682016040523d82523d6000602084013e6125ce565b606091505b50915091506125de8282866125e9565b979650505050505050565b606083156125f8575081611e72565b8251156126085782518084602001fd5b8160405162461bcd60e51b815260040161080a9190612bca565b82805461262e90612ddb565b90600052602060002090601f0160209004810192826126505760008555612696565b82601f1061266957805160ff1916838001178555612696565b82800160010185558215612696579182015b8281111561269657825182559160200191906001019061267b565b506126a29291506126dc565b5090565b5080546126b290612ddb565b6000825580601f106126c2575050565b601f0160209004906000526020600020908101906115bc91905b5b808211156126a257600081556001016126dd565b600067ffffffffffffffff8084111561270c5761270c612e71565b604051601f8501601f19908116603f0116810190828211818310171561273457612734612e71565b8160405280935085815286868601111561274d57600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b038116811461277e57600080fd5b919050565b600082601f830112612793578081fd5b611e72838335602085016126f1565b803563ffffffff8116811461277e57600080fd5b6000602082840312156127c7578081fd5b611e7282612767565b600080604083850312156127e2578081fd5b6127eb83612767565b91506127f960208401612767565b90509250929050565b600080600060608486031215612816578081fd5b61281f84612767565b925061282d60208501612767565b9150604084013590509250925092565b60008060008060808587031215612852578081fd5b61285b85612767565b935061286960208601612767565b925060408501359150606085013567ffffffffffffffff81111561288b578182fd5b8501601f8101871361289b578182fd5b6128aa878235602084016126f1565b91505092959194509250565b600080604083850312156128c8578182fd5b6128d183612767565b915060208301356128e181612e87565b809150509250929050565b600080604083850312156128fe578182fd5b61290783612767565b946020939093013593505050565b60008060408385031215612927578182fd5b61293083612767565b91506127f9602084016127a2565b60006020828403121561294f578081fd5b8151611e7281612e87565b60006020828403121561296b578081fd5b8135611e7281612e95565b600060208284031215612987578081fd5b8151611e7281612e95565b6000602082840312156129a3578081fd5b813567ffffffffffffffff8111156129b9578182fd5b6113c884828501612783565b6000602082840312156129d6578081fd5b5035919050565b6000602082840312156129ee578081fd5b5051919050565b60008060408385031215612a07578182fd5b82359150602083013567ffffffffffffffff811115612a24578182fd5b612a3085828601612783565b9150509250929050565b600060208284031215612a4b578081fd5b611e72826127a2565b6000815480845260208085019450838352808320835b83811015612a8657815487529582019560019182019101612a6a565b509495945050505050565b60008151808452612aa9816020860160208601612d98565b601f01601f19169290920160200192915050565b60008251612acf818460208701612d98565b9190910192915050565b60008351612aeb818460208801612d98565b835190830190612aff818360208801612d98565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612b3b90830184612a91565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612b865783516001600160a01b031683529284019291840191600101612b61565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612b8657835183529284019291840191600101612bae565b602081526000611e726020830184612a91565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b868152600060018060a01b038088166020840152808716604084015260c06060840152612ce560c0840187612a54565b8381036080850152612cf78187612a54565b84810360a086015285548082528685526020808620935090910190845b81811015612d4457612d3583868654166001600160a01b0316815260200190565b60019485019490935001612d14565b50909b9a5050505050505050505050565b60008219821115612d6857612d68612e45565b500190565b600082612d7c57612d7c612e5b565b500490565b600082821015612d9357612d93612e45565b500390565b60005b83811015612db3578181015183820152602001612d9b565b838111156112535750506000910152565b600081612dd357612dd3612e45565b506000190190565b600181811c90821680612def57607f821691505b60208210811415612e1057634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415612e2a57612e2a612e45565b5060010190565b600082612e4057612e40612e5b565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b80151581146115bc57600080fd5b6001600160e01b0319811681146115bc57600080fdfea2646970667358221220254abb82b3cdec778252f17c02bca78ddf68aab80edd3bd5505e2eabd0a9fccd64736f6c63430008040033";

export class Rat__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    initContractURI: string,
    _weth: string,
    baseId: BigNumberish,
    _maxTokens: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Rat> {
    return super.deploy(
      initContractURI,
      _weth,
      baseId,
      _maxTokens,
      overrides || {}
    ) as Promise<Rat>;
  }
  getDeployTransaction(
    initContractURI: string,
    _weth: string,
    baseId: BigNumberish,
    _maxTokens: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initContractURI,
      _weth,
      baseId,
      _maxTokens,
      overrides || {}
    );
  }
  attach(address: string): Rat {
    return super.attach(address) as Rat;
  }
  connect(signer: Signer): Rat__factory {
    return super.connect(signer) as Rat__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RatInterface {
    return new utils.Interface(_abi) as RatInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Rat {
    return new Contract(address, _abi, signerOrProvider) as Rat;
  }
}
